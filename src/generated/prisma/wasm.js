
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CandidatosScalarFieldEnum = {
  idCandidato: 'idCandidato',
  created_at: 'created_at',
  nomeCandidato: 'nomeCandidato',
  cpfCandidato: 'cpfCandidato',
  rgCandidato: 'rgCandidato',
  sexoCandidato: 'sexoCandidato',
  estadocivilCandidato: 'estadocivilCandidato',
  cnhCandidato: 'cnhCandidato',
  outrosexoCandidato: 'outrosexoCandidato',
  categoriacnhCandidato: 'categoriacnhCandidato',
  emailCandidato: 'emailCandidato',
  datanascimentoCandidato: 'datanascimentoCandidato',
  linkedinCandidato: 'linkedinCandidato',
  facebookCandidato: 'facebookCandidato',
  instagramCandidato: 'instagramCandidato',
  telefoneCandidato: 'telefoneCandidato',
  telefone2Candidato: 'telefone2Candidato',
  pcdCandidato: 'pcdCandidato',
  cidareacandidato: 'cidareacandidato',
  cepCandidato: 'cepCandidato',
  ruaCandidato: 'ruaCandidato',
  numeroCandidato: 'numeroCandidato',
  bairroCandidato: 'bairroCandidato',
  cidadeCandidato: 'cidadeCandidato',
  estadoCandidato: 'estadoCandidato',
  vagainteresseCandidato: 'vagainteresseCandidato',
  escolaridadeCandidato: 'escolaridadeCandidato',
  conhecimentosCandidato: 'conhecimentosCandidato',
  wordCandidato: 'wordCandidato',
  excelCandidato: 'excelCandidato',
  powerpointCandidato: 'powerpointCandidato',
  conhecimentosinformaticaCandidato: 'conhecimentosinformaticaCandidato',
  conhecimentoinfcandidato: 'conhecimentoinfcandidato',
  possuiexperienciaCandidato: 'possuiexperienciaCandidato',
  empresaCandidato: 'empresaCandidato',
  local1Candidato: 'local1Candidato',
  atividadesdesenvolvidas1Candidato: 'atividadesdesenvolvidas1Candidato',
  datainicioCandidato: 'datainicioCandidato',
  trabalha1Candidato: 'trabalha1Candidato',
  datafinalCandidato: 'datafinalCandidato',
  empresa2Candidato: 'empresa2Candidato',
  local2Candidato: 'local2Candidato',
  atividadesdesenvolvidas2Candidato: 'atividadesdesenvolvidas2Candidato',
  datainicio2Candidato: 'datainicio2Candidato',
  trabalha2Candidato: 'trabalha2Candidato',
  datafinal2Candidato: 'datafinal2Candidato',
  empresa3Candidato: 'empresa3Candidato',
  local3Candidato: 'local3Candidato',
  atividadesdesenvolvidas3Candidato: 'atividadesdesenvolvidas3Candidato',
  datainicio3Candidato: 'datainicio3Candidato',
  trabalha3Candidato: 'trabalha3Candidato',
  datafinal3Candidato: 'datafinal3Candidato',
  fotoCandidato: 'fotoCandidato',
  parentescoCandidato: 'parentescoCandidato',
  graudeparentescoenomeCandidato: 'graudeparentescoenomeCandidato',
  datacadastroCandidato: 'datacadastroCandidato',
  situacaoCandidato: 'situacaoCandidato',
  opcionalCandidato: 'opcionalCandidato'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senhahash: 'senhahash',
  autorizado: 'autorizado',
  fotourl: 'fotourl',
  criadoem: 'criadoem'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Candidatos: 'Candidatos',
  usuario: 'usuario'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
